---
import BlogList from '@/layouts/BlogList.astro';
import applyPaginatePrefix from '@/utils/applyPaginatePrefix';
import sortById from '@/utils/sortById';
import * as Config from '@/config';

import type { GetStaticPaths, GetStaticPathsOptions, InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';
import { getCollection } from 'astro:content';

export const getStaticPaths = (async ({ paginate }: GetStaticPathsOptions) => {
  const blog = await getCollection('blog');
  const tags = [...new Set(blog.flatMap((p) => p.data.tags))];
  return tags.flatMap((tag) => {
    return applyPaginatePrefix(
      paginate(sortById(blog.filter((p) => p.data.tags.includes(tag))), {
        pageSize: Config.blog.articlesInPage,
        params: { tag },
      }),
      'page/',
    );
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { tag } = Astro.params as Params;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<BlogList lang={Config.blog.lang} pageTitle={`Tag: ${tag} | ${Config.blog.title}`} noindex={page.currentPage != 1} page={page} description={Config.blog.description}>
  <div class="container mx-auto my-7 px-2">
    Tag: {tag}
  </div>
</BlogList>
