---
import BlogList from '@/layouts/BlogList.astro';
import FontawesomeIcon from '@/components/FontawesomeIcon.astro';
import applyPaginatePrefix from '@/utils/applyPaginatePrefix';
import sortById from '@/utils/sortById';
import * as Config from '@/config';

import type { GetStaticPathsOptions } from 'astro';
import { getCollection } from 'astro:content';
import { faTag } from '@fortawesome/free-solid-svg-icons';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const blog = await getCollection('blog');
  const tags = [...new Set(blog.flatMap((p) => p.data.tags))];
  return tags.map((tag) => {
    return applyPaginatePrefix(
      paginate(sortById(blog.filter((p) => p.data.tags.includes(tag))), {
        pageSize: Config.blog.articlesInPage,
        params: { tag },
      }),
      'page/'
    );
  });
}

const { page } = Astro.props;
const { tag } = Astro.params;
---

<BlogList lang={Config.blog.lang} pageTitle={`Tag: ${tag} | ${Config.blog.title}`} noindex={page.currentPage != 1} page={page} description={Config.blog.description}>
  <div class="container mx-auto my-7 px-2">
    <FontawesomeIcon icon={faTag} class="fa-lg" /> Tag: {tag}
  </div>
</BlogList>
